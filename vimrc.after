let g:netrw_banner= 0
let g:netrw_list_hide = '.*'
syntax sync minlines=256
set synmaxcol=128 " Syntax coloring lines that are too long just slows down the world
set nocursorcolumn
set nocursorline
set scrolloff=5
set numberwidth=4
set colorcolumn=100
set nobackup
set nowritebackup
set noerrorbells
set novisualbell
set shiftround 
set noeb vb t_vb=

set ttimeout
set ttimeoutlen=50

" Encoding && Spell Checker -------------------------------------------------------------------
set encoding=utf-8
set fileencodings=utf-8,cp1251,koi8-r,latin1
set langmap=ёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕHГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ;`qwertyuiop[]asdfghjkl\\;'zxcvbnm\\,.~QWERTYUIOP{}ASDFGHJKL:\\"ZXCVBNM<>

" spell checking shortcuts (next, prev, add, suggest)
map <Leader>sn ]s
map <Leader>sp [s
map <Leader>sa zg
map <Leader>ss z=

" Convert ruby hashes to 1.9 style -----------------------------------------------------------
map <F5> :%s/:\([^ ]*\)\(\s*\)=>/\1:/g<CR>

" Clear highlighting
nnoremap <leader><space> :noh<cr>

" Center screen when scrolling search results
nmap n nzz
nmap N Nzz

" Map ESC
imap jj <ESC>

" Tabularize
if exists(":Tab")
  nmap <leader>a\| :Tab /\|<CR>
  vmap <leader>a\| :Tab /\|<CR>
  nmap <leader>a= :Tab /=<CR>
  vmap <leader>a= :Tab /=<CR>
  nmap <leader>a: :Tab /:\zs<CR>
  vmap <leader>a: :Tab /:\zs<CR>
endif

" Fast Rails Navigation
if exists(":Rails")
  map <leader>gv :Rview <CR>
  map <leader>gc :Rcontroller <CR>
  map <leader>gm :Rmodel <CR>
endif

" CtrlP plugin section ------------------------------------------------------------------------
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
let g:ctrlp_extensions = ['funky']
let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn|sass-cache|bundle)$|\v[\/]public|node_modules|\v[\/]public\/system|_(m|templates)|log|tmp|bin',
  \ 'file': '\v\.(exe|so|dll|jpg|png|gif|jpeg|scssc|pdf)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }

set tags=./tags,tags;
" autocmd FileType ruby let &l:tags = pathogen#legacyjoin(pathogen#uniq(
"       \ pathogen#split(&tags) +
"       \ map(split($GEM_PATH,':'),'v:val."/gems/*/tags"')))

"-----------------------------------------------------------------------------------------------
let g:ctrlp_map = '<D-p>'
let g:Powerline_symbols = 'fancy'

" Fast escape ----------------------------------------------------------------------------------
if ! has('gui_running')
    set ttimeoutlen=10
    augroup FastEscape
        autocmd!
        au InsertEnter * set timeoutlen=0
        au InsertLeave * set timeoutlen=1000
    augroup END
endif

set laststatus=2 " Always display the statusline in all windows
set noshowmode   " Hide the default mode text (e.g. -- INSERT -- below the statusline)

"You can use Ag with ack.vim
let g:ackprg = 'ag --nogroup --nocolor --column'

" Split Join -----------------------------------------------------------------------------------
let g:splitjoin_split_mapping = ''
let g:splitjoin_join_mapping = ''
nmap <Leader>j :SplitjoinJoin<cr>
nmap <Leader>s :SplitjoinSplit<cr>

" Seek -----------------------------------------------------------------------------------------
let g:SeekBackKey = '<S-Space>'
